{"version":3,"sources":["components/languageswitcher.js","components/navbar.js","utils/ScrollToTop.js","App.js","i18n/index.js","serviceWorker.js","index.js","constants.js","utils/commonfunctions.js"],"names":["LanguageSwitcher","useLocalStorage","language","setLanguage","i18n","useTranslation","useEffect","changeLanguage","className","as","locales","Modal","List","Object","entries","map","key","Item","onClick","activeNavIcon","path","style","stroke","window","location","pathname","Expand","expand","pages","setExpand","darkMode","setIsThemeSet","setDarkMode","expandElement","useRef","t","useEffectOnce","anime","targets","current","translateX","easing","duration","ref","onMouseLeave","page","i","showInNavbar","to","pageLink","animationDelay","animationDelayForNavbar","displayName","innerWidth","prevMode","color","Navbar","useState","useLockBodyScroll","windowSize","useWindowSize","onMouseEnter","width","Fragment","ScrollToTop","useLocation","scrollTo","Home","lazy","DeepDive","FAQ","Demographics","State","Essentials","schemaMarkup","name","alternateName","url","image","App","view","isThemeSet","matchMedia","matches","React","document","querySelector","classList","add","remove","Helmet","type","JSON","stringify","fallback","render","index","exact","match","params","stateCode","use","Backend","LanguageDetector","initReactI18next","init","debug","isDevelopmentOrTest","lng","fallbackLng","keySeparator","returnEmptyString","backend","loadPath","addPath","saveMissing","interpolation","escapeValue","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","STATE_ROW_STATISTICS","DISTRICT_ROW_STATISTICS","MAP_TYPES","COUNTRY","STATE","DISTRICT","MAP_STATISTICS","TOTAL","PER_MILLION","ZONE","HOTSPOTS","MAP_VIEWS","STATES","DISTRICTS","MAPS_DIR","MAP_META","India","geoDataFile","mapType","graphObjectStates","graphObjectDistricts","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","STATE_CODES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","stateCodes","reverseStateCodes","keys","push","code","STATE_CODES_REVERSE","STATE_CODES_ARRAY","STATE_POPULATIONS","Total","RAW_DATA_PARTITIONS","v1","start","Date","end","v2","v3","v4","LOCALE_SHORTHANDS","english","hindi","hi","telugu","te","kannada","gujarati","gu","marathi","tamil","ta","bengali","bn","punjabi","malayalam","odiya","ESSENTIALS_CATEGORIES","Ambulance","Fundraisers","Police","Transportation","Other","getStateName","toUpperCase","getIndiaDay","startOfDay","utcToZonedTime","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","format","parse","locale","formatDayMonth","formatLastUpdated","formatDistance","formatTimeseriesDate","formatTimeseriesTickX","preprocessTimeseries","timeseries","data","dataTypes","filter","d","every","dt","date","Number","today","isBefore","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","totalactive","dailyactive","sliceTimeseriesFromEnd","days","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","parseStateTimeseries","states_daily","statewiseSeries","reduce","a","c","forEach","k","v","toLowerCase","prev","length","parseStateTestData","reversed","reverse","ret","obj","find","totaltested","source","source1","source2","updatedon","parseStateTestTimeseries","testTimseries","sc","dailytested","stateTs","differenceInDays","NaN","parseTotalTestTimeseries","updatetimestamp","split","totalsamplestested","isSameDay","mergeTimeseries","ts1","ts2","tsRet","assign","hasOwnProperty","d1","testData","d2","capitalize","s","charAt","capitalizeAll","str","join","abbreviate","replace","parseDistrictZones","zones","district","values"],"mappings":"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","file":"static/js/main.69753817.chunk.js","sourcesContent":["import locales from '../i18n/locales.json';\n\nimport Button from '@primer/components/lib/Button';\nimport SelectMenu from '@primer/components/lib/SelectMenu';\nimport React, {useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage} from 'react-use';\n\nexport default function LanguageSwitcher() {\n  const [language, setLanguage] = useLocalStorage('language', 'english');\n  const {i18n} = useTranslation();\n\n  useEffect(() => {\n    if (i18n) i18n.changeLanguage(language);\n  }, [i18n, language]);\n\n  return (\n    <div className=\"LanguageSwitcher\">\n      <SelectMenu>\n        <Button as=\"summary\" className=\"button\">\n          {locales[language]}\n        </Button>\n        <SelectMenu.Modal className=\"select-menu-modal\">\n          <SelectMenu.List className=\"select-menu-list\">\n            {Object.entries(locales).map(([key, language]) => (\n              <SelectMenu.Item\n                key={key}\n                className=\"select-menu-item\"\n                onClick={() => {\n                  setLanguage(key);\n                }}\n              >\n                {language}\n              </SelectMenu.Item>\n            ))}\n          </SelectMenu.List>\n        </SelectMenu.Modal>\n      </SelectMenu>\n    </div>\n  );\n}\n","import LanguageSwitcher from './languageswitcher';\n\nimport anime from 'animejs';\nimport React, {useState, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {\n  useEffectOnce,\n  useLockBodyScroll,\n  useWindowSize,\n  useLocalStorage,\n} from 'react-use';\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\n  },\n});\n\nfunction Navbar({pages, darkMode, setDarkMode}) {\n  const [expand, setExpand] = useState(false);\n  // eslint-disable-next-line\n  const [isThemeSet, setIsThemeSet] = useLocalStorage('isThemeSet', false);\n  const {t} = useTranslation();\n\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n\n  return (\n    <div className=\"Navbar\">\n      <LanguageSwitcher />\n      {window.innerWidth > 769 && (\n        <div\n          className=\"navbar-left\"\n          onClick={() => {\n            setDarkMode((prevMode) => !prevMode);\n            setIsThemeSet(true);\n          }}\n        >\n          {darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\n        </div>\n      )}\n      <div className=\"navbar-middle\">\n        <Link\n          to=\"/\"\n          onClick={() => {\n            setExpand(false);\n          }}\n        >\n          Covid19<span>India</span>\n        </Link>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onClick={() => {\n          setExpand(!expand);\n        }}\n        onMouseEnter={() => {\n          if (window.innerWidth > 769) {\n            setExpand(true);\n          }\n        }}\n      >\n        {windowSize.width < 769 && (\n          <span>{expand ? t('Close') : t('Menu')}</span>\n        )}\n        {windowSize.width > 769 && (\n          <React.Fragment>\n            <span>\n              <Link to=\"/\">\n                <Icon.Home {...activeNavIcon('/')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/demographics\">\n                <Icon.Users {...activeNavIcon('/demographics')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/deepdive\">\n                <Icon.BarChart2 {...activeNavIcon('/deepdive')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/essentials\">\n                <Icon.Package {...activeNavIcon('/essentials')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/about\">\n                <Icon.HelpCircle {...activeNavIcon('/about')} />\n              </Link>\n            </span>\n          </React.Fragment>\n        )}\n      </div>\n\n      {expand && (\n        <Expand\n          expand={expand}\n          pages={pages}\n          setExpand={setExpand}\n          darkMode={darkMode}\n          setIsThemeSet={setIsThemeSet}\n          setDarkMode={setDarkMode}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction Expand({\n  expand,\n  pages,\n  setExpand,\n  darkMode,\n  setIsThemeSet,\n  setDarkMode,\n}) {\n  const expandElement = useRef(null);\n  const {t} = useTranslation();\n\n  useEffectOnce(() => {\n    anime({\n      targets: expandElement.current,\n      translateX: '10.5rem',\n      easing: 'easeOutExpo',\n      duration: 250,\n    });\n  });\n\n  return (\n    <div\n      className=\"expand\"\n      ref={expandElement}\n      onMouseLeave={() => {\n        setExpand(false);\n      }}\n    >\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              onClick={() => {\n                setExpand(false);\n              }}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {t(page.displayName)}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n\n      {window.innerWidth < 768 && (\n        <div\n          className=\"fadeInUp\"\n          style={{animationDelay: '0.9s'}}\n          onClick={() => {\n            setDarkMode((prevMode) => !prevMode);\n            setIsThemeSet(true);\n          }}\n        >\n          <div>{darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}</div>\n        </div>\n      )}\n\n      <div className=\"expand-bottom fadeInUp\" style={{animationDelay: '1s'}}>\n        <h5>{t('A crowdsourced initiative.')}</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import {useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const {pathname} = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import Navbar from './components/navbar';\nimport ScrollToTop from './utils/ScrollToTop';\n\nimport React, {Suspense, lazy} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport {useLocalStorage, useEffectOnce} from 'react-use';\nimport './App.scss';\n\nconst Home = lazy(() =>\n  import('./components/home' /* webpackChunkName: \"Home\" */)\n);\nconst DeepDive = lazy(() =>\n  import('./components/deepdive' /* webpackChunkName: \"DeepDive\" */)\n);\nconst FAQ = lazy(() =>\n  import('./components/faq' /* webpackChunkName: \"FAQ\" */)\n);\nconst Demographics = lazy(() =>\n  import('./components/demographics' /* webpackChunkName: \"PatientDB\" */)\n);\nconst State = lazy(() =>\n  import('./components/state' /* webpackChunkName: \"State\" */)\n);\nconst Essentials = lazy(() =>\n  import('./components/essentials' /* webpackChunkName: \"Essentials\" */)\n);\n\nconst schemaMarkup = {\n  '@context': 'http://schema.org/',\n  '@type': 'NGO',\n  name: 'Coronavirus Outbreak in India: Latest Map and Case Count',\n  alternateName: 'COVID-19 Tracker',\n  url: 'https://www.covid19india.org/',\n  image: 'https://www.covid19india.org/thumbnail.png',\n};\n\nfunction App() {\n  const {t} = useTranslation();\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/demographics',\n      view: Demographics,\n      displayName: t('Demographics'),\n      animationDelayForNavbar: 0.3,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: t('Deep Dive'),\n      animationDelayForNavbar: 0.4,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/essentials',\n      view: Essentials,\n      displayName: t('Essentials'),\n      animationDelayForNavbar: 0.5,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/about',\n      view: FAQ,\n      displayName: t('About'),\n      animationDelayForNavbar: 0.6,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/state/:stateCode',\n      view: State,\n      displayName: t('State'),\n      animationDelayForNavbar: 0.7,\n      showInNavbar: false,\n    },\n  ];\n\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n  const [isThemeSet] = useLocalStorage('isThemeSet', false);\n\n  useEffectOnce(() => {\n    if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches &&\n      !isThemeSet\n    ) {\n      setDarkMode(true);\n    } else if (\n      window.matchMedia &&\n      !window.matchMedia('(prefers-color-scheme: dark)').matches &&\n      !isThemeSet\n    ) {\n      setDarkMode(false);\n    }\n  });\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector('body').classList.add('dark-mode');\n    } else {\n      document.querySelector('body').classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaMarkup)}\n        </script>\n      </Helmet>\n\n      <Router>\n        <ScrollToTop />\n        <Suspense fallback={<div className=\"lazy\"></div>}>\n          <Route\n            render={({location}) => (\n              <React.Fragment>\n                <Navbar\n                  pages={pages}\n                  darkMode={darkMode}\n                  setDarkMode={setDarkMode}\n                />\n                <Switch location={location}>\n                  {pages.map((page, index) => {\n                    return (\n                      <Route\n                        exact\n                        path={page.pageLink}\n                        render={({match}) => (\n                          <page.view key={match.params.stateCode || index} />\n                        )}\n                        key={index}\n                      />\n                    );\n                  })}\n                  <Redirect to=\"/\" />\n                </Switch>\n              </React.Fragment>\n            )}\n          />\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import {isDevelopmentOrTest} from '../utils/commonfunctions';\n\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport {initReactI18next} from 'react-i18next';\n\nconst DEBUG = true;\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    debug: isDevelopmentOrTest() && DEBUG,\n    lng: 'english',\n    fallbackLng: 'english',\n    keySeparator: false,\n    returnEmptyString: false,\n    backend: {\n      loadPath: 'https://api.covid19india.org/locales/locale_{{lng}}.json',\n      addPath: 'http://localhost:9999/',\n    },\n    saveMissing: isDevelopmentOrTest() && DEBUG,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import App from './App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nimport React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <Suspense fallback={''}>\n    <App />\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import {hi, te, gu, ta, bn} from 'date-fns/locale/';\n\nexport const STATE_ROW_STATISTICS = [\n  'confirmed',\n  'active',\n  'recovered',\n  'deaths',\n];\nexport const DISTRICT_ROW_STATISTICS = [\n  'confirmed',\n  'active',\n  'recovered',\n  'deceased',\n];\n\nexport const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n  DISTRICT: 'district',\n};\n\nexport const MAP_STATISTICS = {\n  TOTAL: 0,\n  PER_MILLION: 1,\n  ZONE: 2,\n  HOTSPOTS: 3,\n};\n\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1,\n};\n\nexport const MAPS_DIR =\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/maps';\n\nexport const MAP_META = {\n  India: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectStates: 'india-states',\n    graphObjectDistricts: 'india-districts-2019-734',\n  },\n  'Andaman and Nicobar Islands': {\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'andhrapradesh_district',\n  },\n  Assam: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'bihar_district',\n  },\n  Chandigarh: {\n    name: 'Chandigarh',\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'chandigarh_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'chhattisgarh_district',\n  },\n  'Dadra and Nagar Haveli and Daman and Diu': {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'dnh-and-dd',\n  },\n  Delhi: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'delhi_district',\n  },\n  Karnataka: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'karnataka_district',\n  },\n  Kerala: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'kerala_district',\n  },\n  Goa: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'goa_district',\n  },\n  Gujarat: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'gujarat_district',\n  },\n  Haryana: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'jharkhand_district',\n  },\n  Ladakh: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'ladakh_district',\n  },\n  Lakshadweep: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'lakshadweep_district',\n  },\n  'Madhya Pradesh': {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'maharashtra_district',\n  },\n  Manipur: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'manipur_district',\n  },\n  Meghalaya: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'meghalaya_district',\n  },\n  Mizoram: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'mizoram_district',\n  },\n  Nagaland: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'nagaland_district',\n  },\n  Odisha: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'odisha_district',\n  },\n  Puducherry: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'puducherry_district',\n  },\n  Punjab: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'punjab_district',\n  },\n  Rajasthan: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'rajasthan_district',\n  },\n  Sikkim: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'tamilnadu_district',\n  },\n  Telangana: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'telangana_district',\n  },\n  Tripura: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'tripura_district',\n  },\n  Uttarakhand: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'westbengal_district',\n  },\n};\n\nexport const STATE_CODES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n};\n\nconst stateCodes = [];\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\nexport const STATE_CODES_ARRAY = stateCodes;\n\n// Source: Projected Populations (2019)\n// National Commission on Population, \"Population Projections for India and\n// States (2011-2036)\", Table-8 (p43), November 2019\n// https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\nexport const STATE_POPULATIONS = {\n  'Andaman and Nicobar Islands': 397000,\n  'Andhra Pradesh': 52221000,\n  'Arunachal Pradesh': 1504000,\n  Assam: 34293000,\n  Bihar: 119520000,\n  Chandigarh: 1179000,\n  Chhattisgarh: 28724000,\n  'Dadra and Nagar Haveli and Daman and Diu': 959000,\n  Delhi: 19814000,\n  Goa: 1540000,\n  Gujarat: 67936000,\n  Haryana: 28672000,\n  'Himachal Pradesh': 7300000,\n  'Jammu and Kashmir': 13203000,\n  Jharkhand: 37403000,\n  Karnataka: 65798000,\n  Kerala: 35125000,\n  Ladakh: 293000,\n  Lakshadweep: 68000,\n  'Madhya Pradesh': 82232000,\n  Maharashtra: 122153000,\n  Manipur: 3103000,\n  Meghalaya: 3224000,\n  Mizoram: 1192000,\n  Nagaland: 2150000,\n  Odisha: 43671000,\n  Puducherry: 1504000,\n  Punjab: 29859000,\n  Rajasthan: 77264000,\n  Sikkim: 664000,\n  'Tamil Nadu': 75695000,\n  Telangana: 37220000,\n  Tripura: 3992000,\n  'Uttar Pradesh': 224979000,\n  Uttarakhand: 11141000,\n  'West Bengal': 96906000,\n  Total: 1332900000,\n};\n\nexport const RAW_DATA_PARTITIONS = {\n  v1: {\n    start: new Date(2020, 0, 1),\n    end: new Date(2020, 3, 19),\n  },\n  v2: {\n    start: new Date(2020, 3, 20),\n    end: new Date(2020, 3, 26),\n  },\n  v3: {\n    start: new Date(2020, 3, 27),\n    end: new Date(2020, 4, 9),\n  },\n  v4: {\n    start: new Date(2020, 4, 10),\n    end: new Date(),\n  },\n};\n\nexport const LOCALE_SHORTHANDS = {\n  english: null,\n  hindi: hi,\n  telugu: te,\n  kannada: null,\n  gujarati: gu,\n  marathi: null,\n  tamil: ta,\n  bengali: bn,\n  punjabi: null,\n  malayalam: null,\n  odiya: null,\n};\n\nexport const ESSENTIALS_CATEGORIES = {\n  'Accommodation and Shelter Homes': 'homes',\n  Ambulance: 'ambulance',\n  'Community Kitchen': 'kitchen',\n  'CoVID-19 Testing Lab': 'lab',\n  'Delivery [Vegetables, Fruits, Groceries, Medicines, etc.]': 'delivery',\n  'Fire Brigade': 'fire',\n  'Free Food': 'food',\n  Fundraisers: 'fund',\n  'Government Helpline': 'helpline',\n  'Hospitals and Centers': 'hospital',\n  'Mental well being and Emotional Support': 'well-being',\n  Police: 'police',\n  'Senior Citizen Support': 'seniors',\n  Transportation: 'transport',\n  'Quarantine Facility': 'quarantine',\n  Other: 'other',\n  'Helpline for Cyclone Amphan': 'cyclone amphan',\n};\n","import {\n  STATE_CODES,\n  STATE_CODES_REVERSE,\n  LOCALE_SHORTHANDS,\n} from '../constants';\n\nimport {\n  parse,\n  differenceInDays,\n  isBefore,\n  isSameDay,\n  startOfDay,\n  format,\n  formatDistance,\n} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport i18n from 'i18next';\n\nexport const isDevelopmentOrTest = () => {\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\n    return true;\n  return false;\n};\n\nexport const getStateName = (code) => {\n  return STATE_CODES[code.toUpperCase()];\n};\n\nexport const getIndiaDay = () => {\n  return startOfDay(utcToZonedTime(new Date(), 'Asia/Kolkata'));\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  return format(\n    parse(unformattedDate, 'dd/MM/yyyy HH:mm:ss', new Date()),\n    'dd MMM, hh:mm b',\n    {\n      locale: LOCALE_SHORTHANDS[i18n.language],\n    }\n  );\n};\n\nexport const formatDayMonth = (unformattedDate) => {\n  return format(parse(unformattedDate, 'dd/MM/yyyy', new Date()), 'dd MMM', {\n    locale: LOCALE_SHORTHANDS[i18n.language],\n  });\n};\n\nexport const formatLastUpdated = (unformattedDate) => {\n  return formatDistance(new Date(formatDate(unformattedDate)), new Date(), {\n    locale: LOCALE_SHORTHANDS[i18n.language],\n  });\n};\n\nexport const formatTimeseriesDate = (unformattedDate) => {\n  return format(unformattedDate, 'dd MMMM', {\n    locale: LOCALE_SHORTHANDS[i18n.language],\n  });\n};\n\nexport const formatTimeseriesTickX = (unformattedDate) => {\n  return format(unformattedDate, 'd MMM', {\n    locale: LOCALE_SHORTHANDS[i18n.language],\n  });\n};\n\nconst validateCTS = (data = []) => {\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      // Skip data from the current day\n      const today = getIndiaDay();\n      const date = parse(d.date, 'dd MMMM', new Date(2020, 0, 1));\n      return isBefore(date, today);\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat, index) => ({\n    date: parse(stat.date, 'dd MMMM', new Date(2020, 0, 1)),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n    // Active = Confimed - Recovered - Deceased\n    totalactive:\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\n    dailyactive:\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = getIndiaDay();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = parse(data[i].date, 'dd-MMM-yy', new Date());\n    // Skip data from the current day\n    if (isBefore(date, today)) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        // Parser\n        const dailyconfirmed = +data[i][stateCode] || 0;\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\n        const dailydeceased = +data[i + 2][stateCode] || 0;\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\n        const totalrecovered =\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\n        const totaldeceased =\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\n        // Push\n        v.push({\n          date: date,\n          dailyconfirmed: dailyconfirmed,\n          dailyrecovered: dailyrecovered,\n          dailydeceased: dailydeceased,\n          totalconfirmed: totalconfirmed,\n          totalrecovered: totalrecovered,\n          totaldeceased: totaldeceased,\n          // Active = Confimed - Recovered - Deceased\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n\nexport const parseStateTestData = (data) => {\n  const reversed = [...data].reverse();\n  return Object.keys(STATE_CODES_REVERSE).reduce((ret, state) => {\n    const obj = reversed.find(\n      (obj) => obj.state === state && obj.totaltested !== ''\n    );\n    ret[state] = {\n      source: obj?.source1 || obj?.source2,\n      totaltested: obj?.totaltested,\n      updatedon: obj?.updatedon,\n    };\n    return ret;\n  }, {});\n};\n\nexport const parseStateTestTimeseries = (data) => {\n  const testTimseries = Object.keys(STATE_CODES).reduce((ret, sc) => {\n    ret[sc] = [];\n    return ret;\n  }, {});\n\n  const today = getIndiaDay();\n  data.forEach((d) => {\n    const date = parse(d.updatedon, 'dd/MM/yyyy', new Date());\n    const totaltested = +d.totaltested;\n    const stateCode = STATE_CODES_REVERSE[d.state];\n    if (stateCode && isBefore(date, today) && totaltested) {\n      const stateTs = testTimseries[stateCode];\n      let dailytested;\n      if (stateTs.length) {\n        const prev = stateTs[stateTs.length - 1];\n        dailytested =\n          differenceInDays(date, prev.date) === 1\n            ? totaltested - prev.totaltested\n            : NaN;\n      } else dailytested = NaN;\n      stateTs.push({\n        date: date,\n        totaltested: totaltested,\n        dailytested: dailytested,\n      });\n    }\n  });\n  return testTimseries;\n};\n\nexport const parseTotalTestTimeseries = (data) => {\n  const testTimseries = [];\n  const today = getIndiaDay();\n  data.forEach((d) => {\n    const date = parse(\n      d.updatetimestamp.split(' ')[0],\n      'dd/MM/yyyy',\n      new Date()\n    );\n    const totaltested = +d.totalsamplestested;\n    if (isBefore(date, today) && totaltested) {\n      let dailytested;\n      if (testTimseries.length) {\n        const prev = testTimseries[testTimseries.length - 1];\n        if (isSameDay(date, prev.date)) {\n          prev.dailytested += totaltested - prev.totaltested;\n          prev.totaltested = totaltested;\n        } else {\n          if (differenceInDays(date, prev.date) === 1)\n            dailytested = totaltested - prev.totaltested;\n          else dailytested = NaN;\n        }\n      } else dailytested = NaN;\n      testTimseries.push({\n        date: date,\n        totaltested: totaltested,\n        dailytested: dailytested,\n      });\n    }\n  });\n  return testTimseries;\n};\n\nexport const mergeTimeseries = (ts1, ts2) => {\n  const tsRet = Object.assign({}, ts1);\n  for (const state in ts1) {\n    if (ts1.hasOwnProperty(state)) {\n      tsRet[state] = ts1[state].map((d1) => {\n        const testData = ts2[state].find((d2) => isSameDay(d1.date, d2.date));\n        return {\n          totaltested: testData?.totaltested,\n          dailytested: testData?.dailytested,\n          ...d1,\n        };\n      });\n    }\n  }\n  return tsRet;\n};\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const capitalizeAll = (s) => {\n  if (typeof s !== 'string') return '';\n  const str = s.toLowerCase().split(' ');\n  for (let i = 0; i < str.length; i++) {\n    str[i] = capitalize(str[i]);\n  }\n  return str.join(' ');\n};\n\nexport const abbreviate = (s) => {\n  return s.slice(0, 1) + s.slice(1).replace(/[aeiou]/gi, '');\n};\n\nexport const parseDistrictZones = (data, state) => {\n  const zones = data.reduce((ret, d) => {\n    ret[d.state] = ret[d.state] || {};\n    ret[d.state][d.district] = d;\n    return ret;\n  }, {});\n  Object.values(STATE_CODES).forEach((state) => {\n    if (!zones[state]) zones[state] = {};\n  });\n  return state ? {[state]: zones[state]} : zones;\n};\n\nexport const toTitleCase = (str) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n"],"sourceRoot":""}