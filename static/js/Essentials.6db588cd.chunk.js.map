{"version":3,"sources":["components/knnresults.js","components/essentials.js"],"names":["medFilter","feature","properties","priority","othersFilter","getDistance","p1","p2","phi1","Math","PI","phi2","dLambda","d","acos","sin","cos","Number","toFixed","KnnResults","userLocation","userState","useState","geoData","setGeoData","results","setResults","categories","setCategories","useEffectOnce","getJSON","useCallback","axios","get","then","response","data","catch","error","console","log","useEffect","medKnn","restKnn","panKnn","Knn","L","geoJSON","filter","nearestLayer","features","feat","state","includes","result","name","type","i","length","push","geometry","coordinates","layer","desc","addr","phone","contact","icon","recordid","dist","reverse","j","k","map","reduce","acc","e","set","Map","forEach","value","key","categoryMeta","count","isSelected","className","style","animationDelay","Object","keys","categoryName","variant","classnames","onClick","newIsSelected","produce","draft","toggleFilter","href","target","split","EssentialsLoader","useMeasure","svgElement","width","Fragment","ref","speed","height","viewBox","position","x","y","rx","ry","Essentials","props","currentLocation","setCurrentLocation","currentAddress","setCurrentAddress","currentState","setCurrentState","getCurrentAddress","lat","lng","locality","principalSubdivision","err","src","alt","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","size"],"mappings":"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","file":"static/js/Essentials.6db588cd.chunk.js","sourcesContent":["import {Label, LabelGroup, CounterLabel} from '@primer/components';\nimport axios from 'axios';\nimport classnames from 'classnames';\nimport produce from 'immer';\nimport L from 'leaflet';\nimport * as Knn from 'leaflet-knn';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport {ExternalLink, Phone} from 'react-feather';\nimport {useEffectOnce} from 'react-use';\n\nfunction medFilter(feature) {\n  return feature.properties.priority;\n}\n\nfunction othersFilter(feature) {\n  return !feature.properties.priority;\n}\n\nfunction getDistance(p1, p2) {\n  // p1 and p2 => [lat1, long1], [lat2, long2]\n  const phi1 = (p1[0] * Math.PI) / 180;\n  const phi2 = (p2[0] * Math.PI) / 180;\n  const dLambda = ((p2[1] - p1[1]) * Math.PI) / 180;\n  const R = 6371e3;\n  const d =\n    Math.acos(\n      Math.sin(phi1) * Math.sin(phi2) +\n        Math.cos(phi1) * Math.cos(phi2) * Math.cos(dLambda)\n    ) * R;\n  return Number((d / 1000).toFixed(2));\n}\n\nfunction KnnResults({userLocation, userState}) {\n  const [geoData, setGeoData] = useState([]);\n  const [results, setResults] = useState();\n  const [categories, setCategories] = useState([]);\n\n  useEffectOnce(() => {\n    getJSON();\n  }, []);\n\n  const getJSON = useCallback(() => {\n    axios\n      .get('https://api.covid19india.org/resources/geoResources.json')\n      .then((response) => {\n        setGeoData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    let medKnn;\n    let restKnn;\n    let panKnn;\n\n    const hK = 5; // K nearest hospitals/labs wrt user location\n    const rK = 100; // K nearest essentials wrt user location\n    const rad = 10 * 1000; // Max distance of the K points, in meters ; aim to be  ~(avg city radius)\n\n    if (userLocation) {\n      medKnn = new Knn(L.geoJSON(geoData, {filter: medFilter})).nearestLayer(\n        [userLocation[1], userLocation[0]],\n        hK\n      );\n      restKnn = new Knn(\n        L.geoJSON(geoData, {filter: othersFilter})\n      ).nearestLayer([userLocation[1], userLocation[0]], rK, rad);\n      panKnn = geoData?.features?.filter(\n        (feat) =>\n          feat.properties.state === 'PAN India' ||\n          (feat.properties.state.includes('PAN') &&\n            feat.properties.state.includes(userState))\n      );\n    }\n\n    const result = {\n      name: 'NearestK-Essentials',\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (medKnn) {\n      let i = 0;\n      for (i = 0; i < medKnn.length; i++) {\n        result.features.push({\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: medKnn[i].layer.feature.geometry.coordinates,\n          },\n          properties: {\n            name: medKnn[i].layer.feature.properties.name,\n            desc: medKnn[i].layer.feature.properties.desc,\n            addr: medKnn[i].layer.feature.properties.addr,\n            phone: medKnn[i].layer.feature.properties.phone,\n            contact: medKnn[i].layer.feature.properties.contact,\n            icon: medKnn[i].layer.feature.properties.icon,\n            recordid: medKnn[i].layer.feature.properties.recordid,\n            dist: getDistance(\n              userLocation,\n              medKnn[i].layer.feature.geometry.coordinates.reverse()\n            ),\n          },\n        });\n      }\n    }\n\n    if (restKnn) {\n      let j = 0;\n      for (j = 0; j < restKnn.length; j++) {\n        result.features.push({\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: restKnn[j].layer.feature.geometry.coordinates,\n          },\n          properties: {\n            name: restKnn[j].layer.feature.properties.name,\n            desc: restKnn[j].layer.feature.properties.desc,\n            addr: restKnn[j].layer.feature.properties.addr,\n            phone: restKnn[j].layer.feature.properties.phone,\n            contact: restKnn[j].layer.feature.properties.contact,\n            icon: restKnn[j].layer.feature.properties.icon,\n            recordid: restKnn[j].layer.feature.properties.recordid,\n            dist: getDistance(\n              userLocation,\n              restKnn[j].layer.feature.geometry.coordinates.reverse()\n            ),\n          },\n        });\n      }\n    }\n\n    if (panKnn) {\n      let k = 0;\n      for (k = 0; k < panKnn.length; k++) {\n        result.features.push(panKnn[k]);\n      }\n    }\n\n    setResults(result);\n  }, [geoData, userLocation, userState]);\n\n  const toggleFilter = (categoryName, newIsSelected) => {\n    setCategories(\n      produce((draft) => {\n        draft[categoryName].isSelected = newIsSelected;\n      })\n    );\n  };\n\n  useEffect(() => {\n    const categories = {};\n    if (results) {\n      results.features\n        .map(function (feature) {\n          return feature?.properties?.icon;\n        })\n        .reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map())\n        .forEach((value, key, map) => {\n          const categoryMeta = {count: value, isSelected: true};\n          categories[key] = categoryMeta;\n        });\n    }\n    setCategories(categories);\n  }, [results]);\n\n  if (results)\n    return (\n      <div className=\"results fadeInUp\" style={{animationDelay: '0.5s'}}>\n        <div className=\"labels\">\n          <LabelGroup>\n            {Object.keys(categories).map((categoryName) => (\n              <Label\n                variant=\"xl\"\n                key={categoryName}\n                className={classnames('label-item', {\n                  'is-selected': categories[categoryName].isSelected,\n                })}\n                onClick={() =>\n                  toggleFilter(\n                    categoryName,\n                    !categories[categoryName].isSelected\n                  )\n                }\n              >\n                {categoryName}\n                <CounterLabel className=\"counter\">\n                  {categories[categoryName].count}\n                </CounterLabel>\n              </Label>\n            ))}\n          </LabelGroup>\n        </div>\n\n        {results?.features\n          .filter((feature) => {\n            return (\n              Object.keys(categories)\n                .filter(\n                  (categoryName) => categories[categoryName].isSelected === true\n                )\n                .includes(feature.properties.icon) && feature.properties.dist\n            );\n          })\n          .map((result, i) => (\n            <div\n              key={result.properties.recordid ? result.properties.recordid : i}\n              className=\"essential-result\"\n            >\n              <div className=\"result-top\">\n                <div className=\"result-top-left\">\n                  <div className=\"result-name\">{result.properties.name}</div>\n                  <div className=\"result-location\">\n                    {result.properties.addr}\n                  </div>\n                  {result.properties.dist && (\n                    <div className=\"result-distance\">\n                      {result.properties.dist + ' km away'}\n                    </div>\n                  )}\n                </div>\n                <a\n                  className=\"result-category\"\n                  href={result.properties.contact}\n                  target=\"_noblank\"\n                >\n                  <span>{result.properties.icon}</span>\n                  <ExternalLink />\n                </a>\n              </div>\n              <div className=\"result-description\">{result.properties.desc}</div>\n              <div className=\"result-contacts\">\n                {result.properties.phone.split('\\n').map((contact) => (\n                  <div key={contact} className=\"result-contact\">\n                    <Phone />\n                    <a href={`tel:${contact}`}>{contact}</a>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n\n        <div>\n          <h3 className=\"pan-divider\">{`Throughout ${userState} and India`}</h3>\n        </div>\n\n        {results?.features\n          .filter((feature) => {\n            return (\n              Object.keys(categories)\n                .filter(\n                  (categoryName) => categories[categoryName].isSelected === true\n                )\n                .includes(feature.properties.icon) && !feature.properties.dist\n            );\n          })\n          .map((result, i) => (\n            <div\n              key={result.properties.recordid ? result.properties.recordid : i}\n              className=\"essential-result\"\n            >\n              <div className=\"result-top\">\n                <div className=\"result-top-left\">\n                  <div className=\"result-name\">{result.properties.name}</div>\n                  <div className=\"result-location\">\n                    {result.properties.addr}\n                  </div>\n                  {result.properties.dist && (\n                    <div className=\"result-distance\">\n                      {result.properties.dist + ' km away'}\n                    </div>\n                  )}\n                </div>\n                <a\n                  className=\"result-category\"\n                  href={result.properties.contact}\n                  target=\"_noblank\"\n                >\n                  <span>{result.properties.icon}</span>\n                  <ExternalLink />\n                </a>\n              </div>\n              <div className=\"result-description\">{result.properties.desc}</div>\n              <div className=\"result-contacts\">\n                {result.properties.phone.split('\\n').map((contact) => (\n                  <div key={contact} className=\"result-contact\">\n                    <Phone />\n                    <a href={`tel:${contact}`}>{contact}</a>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n      </div>\n    );\n  else return null;\n}\n\nexport default KnnResults;\n","import KnnResults from './knnresults';\n\nimport axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport ContentLoader from 'react-content-loader';\nimport * as Icon from 'react-feather';\nimport {useMeasure} from 'react-use';\n\nfunction EssentialsLoader() {\n  const [svgElement, {width}] = useMeasure();\n\n  useEffect(() => {}, [width]);\n\n  return (\n    <React.Fragment>\n      <span ref={svgElement} style={{width: '100%'}} />\n      {width && (\n        <ContentLoader\n          speed={1.5}\n          width={width}\n          height={325}\n          viewBox={`0 0 ${width} 325`}\n          position=\"absolute\"\n          className=\"fadeInUp\"\n        >\n          <rect\n            x={width / 2 - 60}\n            y=\"10\"\n            rx=\"5\"\n            ry=\"5\"\n            width=\"120\"\n            height=\"32\"\n          />\n          <rect\n            x={width / 2 + 70}\n            y=\"18\"\n            rx=\"100\"\n            ry=\"100\"\n            width=\"15\"\n            height=\"15\"\n          />\n          <rect x=\"10\" y=\"80\" rx=\"5\" ry=\"5\" width=\"85\" height=\"32\" />\n          <rect x=\"100\" y=\"80\" rx=\"5\" ry=\"5\" width=\"65\" height=\"32\" />\n          <rect x=\"10\" y=\"130\" rx=\"5\" ry=\"5\" width={width - 20} height=\"172\" />\n        </ContentLoader>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst Essentials = (props) => {\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [currentAddress, setCurrentAddress] = useState(null);\n  const [currentState, setCurrentState] = useState(null);\n\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setCurrentLocation([position.coords.latitude, position.coords.longitude]);\n      getCurrentAddress(position.coords.latitude, position.coords.longitude);\n    });\n  };\n\n  const getCurrentAddress = (lat, lng) => {\n    try {\n      axios\n        .get(\n          'https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=' +\n            lat +\n            '&longitude=' +\n            lng +\n            '&localityLanguage=en'\n        )\n        .then((response) => {\n          setCurrentAddress(response.data.locality);\n          setCurrentState(response.data.principalSubdivision);\n        });\n    } catch (err) {\n      console.log(err);\n      setCurrentAddress('Error fetching name of your location');\n      setCurrentState(null);\n    }\n  };\n\n  return (\n    <div className=\"Essentials\">\n      <img\n        src=\"/essentials_1.svg\"\n        alt=\"essentials platform\"\n        className=\"fadeInUp\"\n        style={{animationDelay: '0.3s'}}\n      />\n      <img\n        src=\"/essentials_2.svg\"\n        alt=\"essentials woman pushing cart\"\n        className=\"fadeInUp\"\n        style={{position: 'absolute', animationDelay: '0.1s'}}\n      />\n\n      {!currentLocation && (\n        <React.Fragment>\n          <button\n            className=\"button fadeInUp\"\n            style={{animationDelay: '0.6s'}}\n            onClick={() => getLocation()}\n          >\n            <span>View Nearby Essentials</span>\n            <Icon.Compass size={16} />\n          </button>\n          <div className=\"alert fadeInUp\" style={{animationDelay: '0.7s'}}>\n            <Icon.AlertOctagon size={16} />\n            <div className=\"alert-right is-full\">\n              {`We do not collect any location data; they're all stored \n              inside your browser and are inaccessible to us.`}\n            </div>\n          </div>\n          <div className=\"alert fadeInUp\" style={{animationDelay: '0.8s'}}>\n            <Icon.AlertOctagon size={16} />\n            <div className=\"alert-right is-full\">\n              {`We are a community sourced listing platform and are not associated\n              with any of the organizations listed below. Although we verify all\n              our listings, we request you to follow all the guidelines and take\n              the necessary precautions. We encourage you to report any error or\n              suspicious activity so that we can take immediate action.`}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n\n      {currentLocation && !currentAddress && <EssentialsLoader />}\n\n      {currentAddress && (\n        <div className=\"address fadeInUp\">\n          <h3>{currentAddress + ', ' + currentState}</h3>\n\n          <Icon.XCircle\n            size={16}\n            onClick={() => {\n              setCurrentLocation(null);\n              setCurrentAddress(null);\n              setCurrentState(null);\n            }}\n          />\n        </div>\n      )}\n\n      <div className=\"Search\">\n        {currentAddress && (\n          <KnnResults userLocation={currentLocation} userState={currentState} />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Essentials;\n"],"sourceRoot":""}