{"version":3,"sources":["components/footer.js","components/downloadblock.js","components/patientsview.js","components/patients.js","components/demographics.js"],"names":["React","memo","props","t","useTranslation","className","style","animationDelay","href","target","rel","justifyContent","PatientsView","logs","summary","setModal","setPatient","expand","applyClass","Object","keys","slice","map","day","index","Fragment","key","format","Date","length","patient","indexTwo","onClick","patientnumber","Patients","useState","patients","setPatients","setLogs","modal","useLockBodyScroll","window","onclick","event","document","getElementById","useKeyPressEvent","useEffect","parseByDate","useCallback","log","i","parse","dateannounced","list","push","colorMode","gender","typeoftransmission","nationality","getClassNameFn","id","patientIndexArg","patientIndex","err","console","switchPatient","contractedfromwhichpatientsuspected","detectedcity","detecteddistrict","detectedstate","agebracket","statepatientnumber","notes","source1","source2","source3","filterByObject","obj","filters","filter","p","every","Demographics","fetched","setFetched","filteredPatients","setFilteredPatients","pathname","useLocation","setColorMode","scaleMode","setScaleMode","subDays","filterDate","setFilterDate","useLocalStorage","showReminder","setShowReminder","message","setMessage","loading","setLoading","setFilters","scrollTo","getPartition","chosenDate","isWithinInterval","RAW_DATA_PARTITIONS","v1","v2","v3","v4","axios","get","then","response","data","raw_data","reverse","querySelectorAll","forEach","el","setAttribute","handleFilters","label","value","f","newFilters","district","city","display","selectedIndex","getSortedValues","setValues","Set","size","add","Array","from","sort","Helmet","name","content","onChange","defaultValue","disabled","state","minDate","maxDate","calendarIcon","inputProps","onkeydown","e","preventDefault","clearIcon","date","fomattedDate","type","checked"],"mappings":"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","file":"static/js/PatientDB.21c4c104.chunk.js","sourcesContent":["import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>{t('We stand with everyone fighting on the frontlines')}</h5>\n\n      <div className=\"link\">\n        <a\n          href=\"https://github.com/covid19india\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          covid19india\n        </a>\n      </div>\n\n      <a\n        href=\"https://github.com/covid19india/covid19india-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>{t('Open Sourced on GitHub')}</span>\n      </a>\n\n      <a\n        className=\"button excel\"\n        href=\"http://patientdb.covid19india.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>{t('Crowdsourced Patient Database')}</span>\n      </a>\n\n      <a\n        href=\"https://twitter.com/covid19indiaorg\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button twitter\"\n        style={{justifyContent: 'center'}}\n      >\n        <Icon.Twitter />\n        <span>{t('View updates on Twitter')}</span>\n      </a>\n\n      <a\n        href=\"https://bit.ly/covid19crowd\"\n        className=\"button telegram\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.MessageCircle />\n        <span>{t('Join Telegram to Collaborate!')}</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction DownloadBlock(props) {\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/covid19india/api/gh-pages/raw_data.json\"\n      >\n        <Icon.Download /> <span>JSON</span>\n      </a>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/covid19india/api/gh-pages/csv/latest/raw_data.csv\"\n      >\n        <Icon.Download /> <span>CSV</span>\n      </a>\n    </div>\n  );\n}\n\nexport default React.memo(DownloadBlock, () => {\n  return true;\n});\n","import {format} from 'date-fns';\nimport React from 'react';\n\nfunction PatientsView({\n  logs,\n  summary,\n  setModal,\n  setPatient,\n  expand,\n  applyClass,\n}) {\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div key={index} className={`day ${summary ? 'summary' : ''}`}>\n                  {logs[day]\n                    .slice(summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={applyClass(patient)}\n                          onClick={() => {\n                            setModal(true);\n                            setPatient(patient);\n                          }}\n                        >\n                          <h3>{expand ? `P${patient.patientnumber}` : ''}</h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import PatientsView from './patientsview';\n\nimport {parse} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useLockBodyScroll, useKeyPressEvent} from 'react-use';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  useLockBodyScroll(modal);\n\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useKeyPressEvent('Escape', () => {\n    setModal(false);\n  });\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndexArg) => {\n    if (patientIndexArg === '') return;\n    try {\n      const patientIndex = patientIndexArg.slice(1);\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (patient.patientnumber === patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'India'\n              ? 'is-in'\n              : patient.nationality === 'Myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'Indonesia'\n              ? 'is-id'\n              : patient.nationality === 'United Kingdom'\n              ? 'is-uk'\n              : patient.nationality === 'United States of America'\n              ? 'is-us'\n              : patient.nationality === 'Thailand'\n              ? 'is-th'\n              : patient.nationality === 'Phillipines'\n              ? 'is-ph'\n              : patient.nationality === 'Italy'\n              ? 'is-it'\n              : patient.nationality === 'Canada'\n              ? 'is-ca'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>Date Announced</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>Contracted from</h5>\n              <h3\n                className=\"contracted-from\"\n                onClick={() => {\n                  switchPatient(patient.contractedfromwhichpatientsuspected);\n                }}\n              >\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected\n                  : '?'}\n              </h3>\n\n              <h5>Detected City</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>Detected District</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>Detected State</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>Nationality</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>Age</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>Gender</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>State Patient Number</h5>\n              <h3>\n                {patient.statepatientnumber ? patient.statepatientnumber : '?'}\n              </h3>\n\n              <h5>Type of transmission</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>Notes</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>Source 1</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>Source 2</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>Source 3</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import DownloadBlock from './downloadblock';\nimport Footer from './footer';\nimport Patients from './patients';\n\nimport {RAW_DATA_PARTITIONS} from '../constants';\n\nimport axios from 'axios';\nimport {format, subDays, isWithinInterval, parse} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport DatePicker from 'react-date-picker';\nimport * as Icon from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useLocation} from 'react-router-dom';\nimport {useLocalStorage} from 'react-use';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction Demographics(props) {\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(false);\n  const [filterDate, setFilterDate] = useState(subDays(new Date(), 1));\n  const [showReminder, setShowReminder] = useLocalStorage('showReminder', true);\n  const [message, setMessage] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: format(subDays(new Date(), 1), 'dd/MM/yyyy'),\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  const getPartition = useCallback(() => {\n    const chosenDate = parse(filters.dateannounced, 'dd/MM/yyyy', new Date());\n    if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v1)) {\n      return 1;\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v2)) {\n      return 2;\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v3)) {\n      return 3;\n    } else if (isWithinInterval(chosenDate, RAW_DATA_PARTITIONS.v4)) {\n      return 4;\n    }\n  }, [filters.dateannounced]);\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.covid19india.org/raw_data${getPartition()}.json`)\n        .then((response) => {\n          setPatients(response.data.raw_data.reverse());\n          setFetched(true);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, [filters.dateannounced, getPartition]);\n\n  useEffect(() => {\n    const datePickers = document.querySelectorAll(\n      '.react-date-picker__inputGroup input'\n    );\n    datePickers.forEach((el) => el.setAttribute('readOnly', true));\n  }, []);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    if (filterByObject(patients, filters).length > 0) {\n      setFilteredPatients(filterByObject(patients, filters));\n      setMessage(false);\n      setLoading(false);\n    } else {\n      setMessage(true);\n    }\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"Demographics\">\n      <Helmet>\n        <title>Demographics - covid19india.org</title>\n        <meta name=\"title\" content={`Demographics - covid19india.org`} />\n        <meta\n          name=\"description\"\n          content=\"A demographical overview of the Indian population affected by the coronavirus.\"\n        />\n      </Helmet>\n\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n              defaultValue={filters.detectedstate}\n            >\n              <option value=\"\" disabled>\n                Select State\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? 'All' : state}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n              defaultValue={filters.detecteddistrict}\n            >\n              <option value=\"\" disabled>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? 'All' : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <DatePicker\n              value={filterDate}\n              minDate={new Date('30-Jan-2020')}\n              maxDate={subDays(new Date(), 1)}\n              format=\"dd/MM/y\"\n              calendarIcon={<Icon.Calendar />}\n              inputProps={\n                (onkeydown = (e) => {\n                  e.preventDefault();\n                })\n              }\n              clearIcon={<Icon.XCircle />}\n              onChange={(date) => {\n                setFilterDate(date);\n                const fomattedDate = !!date ? format(date, 'dd/MM/yyyy') : '';\n                handleFilters('dateannounced', fomattedDate);\n              }}\n            />\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">Female</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">Male</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">Local</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">Imported</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">Unknown</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-in\"></div>\n              <h5 className=\"is-in\">In</h5>\n              <div className=\"circle is-uk\"></div>\n              <h5 className=\"is-uk\">Uk</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n              <div className=\"circle is-th\"></div>\n              <h5 className=\"is-thailand\">Th</h5>\n              <div className=\"circle is-ph\"></div>\n              <h5 className=\"is-ph\">Ph</h5>\n              <div className=\"circle is-it\"></div>\n              <h5 className=\"is-it\">It</h5>\n              <div className=\"circle is-ca\"></div>\n              <h5 className=\"is-ca\">Ca</h5>\n              <div className=\"circle is-id\"></div>\n              <h5 className=\"is-id\">Id</h5>\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n              defaultValue={colorMode}\n            >\n              {/* <option value=\"\" disabled>\n                Color modes\n              </option> */}\n              <option value=\"genders\">Genders</option>\n              <option value=\"transmission\">Transmission</option>\n              <option value=\"nationality\">Nationality</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>Demographics</h1>\n\n          <div\n            className={`deep-dive ${\n              message || filteredPatients.length === 0 ? 'disabled' : ''\n            }`}\n          >\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              disabled={message || filteredPatients.length === 0}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n          Some of the data provided might be missing/unknown as the details have\n          not been shared by the state/central governments\n        </h6>\n      </div>\n\n      <div\n        className=\"reminder fadeInUp\"\n        style={{animationDelay: '1s', display: showReminder ? '' : 'none'}}\n      >\n        <Icon.XCircle\n          onClick={() => {\n            setShowReminder(false);\n          }}\n        />\n        <p>\n          It is important that we do not think of these as just tiny boxes,\n          numbers, or just another part of statistics - among these are our\n          neighbors, our teachers, our healthcare workers, our supermarket\n          vendors, our friends, our co-workers, our children or our\n          grandparents.\n          <br />\n          <br />\n          Among these are our people.\n        </p>\n      </div>\n\n      {fetched && (\n        <div className=\"patientdb-wrapper\">\n          {loading ? (\n            ' '\n          ) : message ? (\n            <div className=\"no-result\">\n              <h5>\n                There were no new cases in\n                <span>\n                  {filters.detectedcity.length > 0\n                    ? ` ${filters.detectedcity}, `\n                    : ''}\n                  {filters.detecteddistrict.length > 0\n                    ? ` ${filters.detecteddistrict}, `\n                    : ''}\n                  {' ' + filters.detectedstate}\n                </span>{' '}\n                on <span>{filters.dateannounced}.</span>\n              </h5>\n            </div>\n          ) : (\n            <Patients\n              patients={filteredPatients}\n              colorMode={colorMode}\n              expand={scaleMode}\n            />\n          )}\n        </div>\n      )}\n\n      <DownloadBlock patients={patients} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Demographics;\n"],"sourceRoot":""}